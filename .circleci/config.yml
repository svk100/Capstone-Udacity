version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@1.3.0

parameters:
  build:
    type: boolean
    default: false
  update:
    type: boolean
    default: false
  build-eks:
    type: boolean
    default: false

jobs:

  build-docker-image:
    docker:
      - image: cimg/python:3.10.4
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true

      - run:
          name: install dependencies
          command: |
            cd GreenApp
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            sudo chmod +x /bin/hadolint
      - run:
          name: run lint
          command: |
            cd GreenApp
            . venv/bin/activate
            make lint
      - run:
          name: create docker image
          command: |
            docker container ls
            cd GreenApp
            docker build -t greenapp .
            docker image ls
      - run:
          name: test docker image
          command: |
            cd GreenApp
            docker run -d -p 8000:80 greenapp
            if docker ps | grep 'greenapp'
            then
              echo 'Docker works fine'
            else
              echo 'Docker test failed'
              exit 1
            fi
      - run:
          name: upload docker image
          command: |
            cd GreenApp
            echo $docker_password | docker login -u $docker_username --password-stdin 
            docker tag greenapp svk100/greenapp
            docker container ls
            docker push svk100/greenapp

  build-eks-cluster:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Build EKS Cluster
          command: |
            eksctl version
            kubectl version
            #eksctl create cluster --name udacity-capstone --version 1.18 --region us-east-1 --nodegroup-name standard-workers --node-type t2.micro --nodes 1 --nodes-min 1 --nodes-max 2
  
workflows:
  build-workflow:
    when: << pipeline.parameters.build >>
    jobs:
      - build-docker-image
 
  build-eks-workflow:
    when: << pipeline.parameters.build-eks >>
    jobs:
      - build-eks-cluster

